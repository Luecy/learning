(()=>{"use strict";let t="editImage.js",e=Object.prototype.toString,a=(t,e=document.querySelector("canvas"),a,i,l=0,n=0,r=!0)=>new Promise(c=>{let g=new FileReader;g.readAsDataURL(t),g.onload=()=>{let t=new Image;t.src=g.result,t.onload=()=>{let g=e.getContext("2d");void 0==a&&(a=t.naturalWidth),void 0==i&&(i=t.naturalHeight),void 0==l&&(l=0),void 0==n&&(n=0),r&&(e.width=a,e.height=i),g.drawImage(t,l,n,a,i),c()}}}),i=async(t,a)=>{let i=(()=>"[object HTMLCanvasElement]"===e.call(a)?a:document.createElement("canvas"))``,l=i.getContext("2d");return"[object ImageData]"===e.call(t)?(i.width=t.width,i.height=t.height,l.putImageData(t,0,0),i):"[object HTMLImageElement]"===e.call(t)||"[object ImageBitmap]"===e.call(t)||"[object HTMLCanvasElement]"===e.call(t)?("[object HTMLImageElement]"===e.call(t)?(i.width=t.naturalWidth,i.height=t.naturalHeight):(i.width=t.width,i.height=t.height),l.drawImage(t,0,0),i):"[object File]"===e.call(t)||"[object Blob]"===e.call(t)?new Promise(e=>{let a=new FileReader;a.readAsDataURL(t),a.onload=()=>{let t=new Image;t.src=a.result,t.onload=()=>{i.width=t.naturalWidth,i.height=t.naturalHeight,l.drawImage(t,0,0),e(i)}}}):void 0},l=async t=>{if("[object ImageData]"===e.call(t))return t;if("[object HTMLCanvasElement]"===e.call(t)){let a=t.getContext("2d");return a.getImageData(0,0,t.width,t.height)}{let l=await i(t),n=l.getContext("2d");return n.getImageData(0,0,l.width,l.height)}},n=async(t,a="image/png",l=.85,n=!1)=>{if(("[object Blob]"===e.call(t)||"[object File]"===e.call(t))&&!1==n)return t;let r=await i(t);return new Promise(t=>{r.toBlob(e=>{t(e)},a,l)})},r=async t=>{if("[object HTMLImageElement]"===e.call(t))return t;{let a=await n(t),i=new FileReader;return i.readAsDataURL(a),new Promise(t=>{i.onload=()=>{let e=i.result,a=new Image;a.src=e,a.onload=()=>{t(a)}}})}},c=async t=>{if("[object ImageBitmap]"===e.call(t))return t;if("[object HTMLImageElement]"===e.call(t))return createImageBitmap(t,0,0,t.naturalWidth,t.naturalHeight);if("[object File]"!==e.call(t)&&"[object Blob]"!==e.call(t))return createImageBitmap(t,0,0,t.width,t.height);{let a=await r(t);return createImageBitmap(a,0,0,a.naturalWidth,a.naturalHeight)}},g=async(t,e)=>{if("canvas"===e)return await i(t);if("imageElement"===e)return await r(t);if("imageData"===e)return await l(t);if("imageBitmap"===e)return await c(t);if("blob"===e)return await n(t)},h=(()=>{let t=(t=0)=>new Promise(e=>{setTimeout(e,t)});return async(e,a,i)=>{await t();let l=Math.trunc(i/100),n=i%100,r=0;for(let c=0;c<100;c++){for(let g=0;g<l;g++)e();r<n&&(e(),r++),a(),await t()}}})``,w=async(t,e,i,l="imageData")=>{if(!Number.isInteger(e)||e<1||!Number.isInteger(i)||i<1)return null;let r=await n(t),c=document.createElement("canvas");return await a(r,c,e,i),await g(c,l)},o=async(t,e,a,i="imageData",n)=>{let r=await l(t);if(!Number.isInteger(e)||e<2)return null;void 0==a&&(a=document.createElement("canvas")),void 0==n&&(n=()=>{}),a.width=r.width*e,a.height=r.height*e;{let c=a.getContext("2d"),w=r.data.length/4,o=0,d=0,$=0,u=1;return await h(()=>{let t=r.data[$++],i=r.data[$++],l=r.data[$++],n=r.data[$++];c.fillStyle=`rgba(${t}, ${i}, ${l}, ${n})`,c.fillRect(o,d,e,e),o<a.width-e?o+=e:(o=0,d+=e)},()=>{n(u),u++},w),await g(a,i)}},d=async(t,e="imageData")=>{let a=document.createElement("canvas"),i=a.getContext("2d"),l=await r(t),n=l.naturalWidth,c=l.naturalHeight;return a.width=c,a.height=n,i.rotate(90*Math.PI/180),i.translate(0,-c),i.drawImage(l,0,0,n,c),await g(a,e)},$=async(t,e="imageData")=>{let a=await l(t),i=a.width,n=a.height,r=new ImageData(i,n),c=0,h=4*i-4;for(let w=0;w<n;w++){for(let o=0;o<i;o++){for(let d=0;d<4;d++)r.data[h]=a.data[c],c++,h++;h-=8}h+=8*i}return await g(r,e)},u=(()=>{let t=t=>((!Number.isInteger(t=Number(t))||t<0)&&(t=0),t);return async(e,a,i,n,r,c="#000000ff",h="imageData")=>{a=t(a),i=t(i),n=t(n),r=t(r);{let w=await l(e),o=document.createElement("canvas"),d=o.getContext("2d");return o.width=w.width+a+i,o.height=w.height+n+r,d.fillStyle=c,d.fillRect(0,0,o.width,o.height),d.putImageData(w,a,n),await g(o,h)}}})``,m=async(t,e,a,i,n,r="imageData")=>{let c=document.createElement("canvas"),h=c.getContext("2d"),w=await l(t);return c.width=w.width-(e+a),c.height=w.height-(i+n),h.putImageData(w,-e,-i),await g(c,r)},s=async(t,e,a,n,c="imageData")=>{let h=document.createElement("canvas"),w=h.getContext("2d");return t=await l(t),e=await r(e),await i(t,h),w.drawImage(e,a,n),g(h,c)};if(!0===self.hasOwnProperty(t))throw Error(`window["${t}"] is in conflict`);for(let f in self[t]=Object.preventExtensions({drawImagefileToCanvas:a,imageToCanvas:i,toImageData:l,imageToBlob:n,toImageElement:r,toImageBitmap:c,changeType:g,asyncLoop:h,resize:w,enlarge:o,rotate:d,reverse:$,space:u,cut:m,insert:s}),self[t])Object.defineProperty(self[t],f,{writable:!1});Object.defineProperty(self,t,{writable:!1})})``;