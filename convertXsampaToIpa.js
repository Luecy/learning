;(() => {
	"use strict";
	
	//このライブラリが定義するグローバル変数の名前
	const propName = "convertXsampaToIpa.js";
	
	//グローバル変数の競合を判定
	if (self.hasOwnProperty(propName) === true) {
		throw new Error(`[self.${propName}] is in conflict`);
	}
	
	/*
		文字列を正規表現に変換するためのエスケープ
		. * + ^ | [ ] ( ) ? $ { } / \
	*/
	const escape = (str) => {
		return str.replace(/\\/g, "\\\\")
			.replace(/\*/g, "\\*")
			.replace(/\./g, "\\.")
			.replace(/\+/g, "\\+")
			.replace(/\^/g, "\\^")
			.replace(/\|/g, "\\|")
			.replace(/\[/g, "\\[")
			.replace(/\]/g, "\\]")
			.replace(/\(/g, "\\(")
			.replace(/\)/g, "\\)")
			.replace(/\?/g, "\\?")
			.replace(/\$/g, "\\$")
			.replace(/\{/g, "\\{")
			.replace(/\}/g, "\\}")
		;
	};
	
	//変換のリスト
	const list = [
		["_T\\", "\u030b"], //a̋ ɑ̋ 非公式
		["_H\\", "\u0301"], //á ɑ́ 非公式
		["_M\\", "\u0304"], //ā ɑ̄ 非公式
		["_L\\", "\u0300"], //à ɑ̀ 非公式
		["_B\\", "\u030f"], //ȁ ɑ̏ 非公式
		["_R", "\u030c"], //ǎ ɑ̌
		["_F", "\u0302"], //â ɑ̂
		["_r\\", "\u02d4"], //˔ 非公式
		["_h\\", "\u02b1"], //ʱ 非公式
		["b_<", "\u0253"], //ɓ
		["d`", "\u0256"], //ɖ
		["d\\", "\u0221"], //ȡ 非公式
		["d_<", "\u0257"], //ɗ
		["g_<", "\u0260"], //ɠ
		["h\\", "\u0266"], //ɦ
		["j\\", "\u029d"], //ʝ
		["l`", "\u026d"], //ɭ
		["l\\", "\u027a"], //ɺ
		["n`", "\u0273"], //ɳ
		["n\\", "\u0235"], //ȵ 非公式
		["p\\", "\u0278"], //ɸ
		["r\\`", "\u027b"], //ɻ
		["r\\", "\u0279"], //ɹ
		["s`", "\u0282"], //ʂ
		["s\\", "\u0255"], //ɕ
		["t`", "\u0288"], //ʈ
		["t\\", "\u0236"], //ȶ 非公式
		["v\\", "\u028b"], //ʋ
		["x\\", "\u0267"], //ɧ
		["z`", "\u0290"], //ʐ
		["z\\", "\u0291"], //ʑ
		["B\\", "\u0299"], //ʙ
		["G\\_<", "\u029b"], //ʛ
		["G\\", "\u0262"], //ɢ
		["H\\", "\u029c"], //ʜ
		["I\\", "\u1d7b"], //ᵻ 非公式
		["J\\_<", "\u0284"], //ʄ
		["J\\", "\u025f"], //ɟ
		["K\\", "\u026e"], //ɮ
		["L\\", "\u029f"], //ʟ
		["M\\", "\u0270"], //ɰ
		["N\\", "\u0274"], //ɴ
		["O\\", "\u0298"], //ʘ
		["R\\", "\u0280"], //ʀ
		["U\\", "\u1d7f"], //ᵿ 非公式
		["V\\", "\u2c71"], //ⱱ 非公式
		["X\\", "\u0127"], //ħ
		['_"', "\u0308"], //ä ɑ̈
		["_+\\", "\u02d6"], //˖ 非公式
		["_+", "\u031f"], //ɑ̟ ʌ̟
		["_-\\", "\u02d7"], //˗ 非公式
		["_-", "\u0320"], //a̠ æ̠
		["_0\\", "\u030a"], //å ɑ̊ 非公式
		["_0", "\u0325"], //ḁ ɑ̥
		["_>", "\u02bc"], //ʼ
		["_?\\", "\u02e4"], //ˤ
		["_^", "\u032f"], //a̯ ɑ̯
		["_}", "\u031a"], //t̚ d̚
		["_=\\", "\u02ed"], //˭ 非公式
		["_=", "\u030d"], //l̍ n̍
		["_~", "\u0303"], //ã ɑ̃
		["_/", "\u030c"], //ǎ ɑ̌
		["_\\", "\u0302"], //â ɑ̂
		["_A", "\u0318"], //a̘ ɑ̘
		["_a", "\u033a"], //t̺ d̺
		["_B", "\u02e9"], //˩
		["_c", "\u031c"], //o̜ ʊ̜
		["_d", "\u032a"], //t̪ d̪
		["_e", "\u0334"], //    ̴ t̴ d̴
		["<F>", "\u2198"], //↘
		["_G", "\u02e0"], //ˠ
		["_H", "\u02e6"], //˦
		["_h", "\u02b0"], //ʰ
		["_j", "\u02b2"], //ʲ
		["_k", "\u0330"], //a̰ ɑ̰
		["_L", "\u02e8"], //˨
		["_l", "\u02e1"], //ˡ
		["_M", "\u02e7"], //˧
		["_m", "\u033b"], //t̻ d̻
		["_N", "\u033c"], //t̼ d̼
		["_n", "\u207f"], //ⁿ
		["_O", "\u0339"], //a̹ ɑ̹
		["_o\\", "\u02d5"], //˕ 非公式
		["_o", "\u031e"], //u̞ ʊ̞
		["_q", "\u0319"], //a̙ ɑ̙
		["<R>", "\u2197"], //↗
		["_r", "\u031d"], //o̝ ɔ̝
		["_T", "\u02e5"], //˥
		["_t", "\u0324"], //a̤ ɑ̤
		["_v", "\u032c"], //p̬ ɸ̬
		["_w", "\u02b7"], //ʷ
		["_X", "\u0306"], //t̆ d̆
		["_x", "\u033d"], //a̽ ɑ̽
		["3\\", "\u025e"], //ɞ
		["3`", "\u025d"], //ɝ
		["5\\", "\u0234"], //ȴ 非公式
		["r`", "\u027d"], //ɽ
		["<\\", "\u02a2"], //ʢ
		[">\\", "\u02a1"], //ʡ
		["?\\", "\u0295"], //ʕ
		["@\\", "\u0258"], //ɘ
		["@`", "\u025a"], //ɚ
		["!\\", "\u01c3"], //ǃ
		["|\\|\\", "\u01c1"], //ǁ
		["|\\", "\u01c0"], //ǀ
		["||", "\u2016"], //‖
		["=\\", "\u01c2"], //ǂ
		[":\\", "\u02d1"], //ˑ
		["-\\", "\u203f"], //‿
		["A", "\u0251"], //ɑ
		["B", "\u03b2"], //β
		["C", "\u00e7"], //ç
		["D", "\u00f0"], //ð
		["E", "\u025b"], //ɛ
		["F", "\u0271"], //ɱ
		["G", "\u0263"], //ɣ
		["g", "\u0261"], //ɡ
		["H", "\u0265"], //ɥ
		["I", "\u026a"], //ɪ
		["J", "\u0272"], //ɲ
		["K", "\u026c"], //ɬ
		["L", "\u028e"], //ʎ
		["M", "\u026f"], //ɯ
		["N", "\u014b"], //ŋ
		["O", "\u0254"], //ɔ
		["P", "\u028b"], //ʋ
		["Q", "\u0252"], //ɒ
		["R", "\u0281"], //ʁ
		["S", "\u0283"], //ʃ
		["T", "\u03b8"], //θ
		["U", "\u028a"], //ʊ
		["V", "\u028c"], //ʌ
		["W", "\u028d"], //ʍ
		["X", "\u03c7"], //χ
		["Y", "\u028f"], //ʏ
		["Z", "\u0292"], //ʒ
		["&", "\u0276"], //ɶ
		["{", "\u00e6"], //æ
		["}", "\u0289"], //ʉ
		["1", "\u0268"], //ɨ
		["2", "\u00f8"], //ø
		["3", "\u025c"], //ɜ
		["4", "\u027e"], //ɾ
		["5", "\u026b"], //ɫ
		["6", "\u0250"], //ɐ
		["7", "\u0264"], //ɤ
		["8", "\u0275"], //ɵ
		["9", "\u0153"], //œ
		["?", "\u0294"], //ʔ
		["@", "\u0259"], //ə
		['"', "\u02c8"], //ˈ
		["%", "\u02cc"], //ˌ
		[":", "\u02d0"], //ː
		["^", "\ua71b"], //ꜛ
		["!", "\ua71c"], //ꜜ
		["=", "\u0329"], //m̩ ɹ̩
		["`", "\u02de"], //a˞ ɑ˞
		["~", "\u0303"], //ã ɑ̃
		["'", "\u02b2"], //ʲ
		["-", "\u0361"] //    ͡    t͡s t͡ʃ 非公式
	];
	
	/*
		リストを正規表現に変換し、
		*(アスタリスク)でのエスケープを追加。
	*/
	for (let i = 0; i < list.length; i++) {
		const arr = list[i];
		arr[0] = escape(arr[0]);
		arr[0] = "(?<!\\*)" + arr[0];
		arr[0] = new RegExp(arr[0], "g");
	}
	
	//関数の定義
	const convertXsampaToIpa = str => {
		for (const i of list) {
			str = str.replace(i[0], i[1]);
		}
		str = str.replace(/\*/g, "");
		return str;
	};
	
	//グローバル変数の定義
	self[propName] = Object.preventExtensions({
		convertXsampaToIpa
	});
	Object.defineProperty(self[propName], "convertXsampaToIpa", {writable: false});
	
	//グローバル変数の再代入を無効に
	Object.defineProperty(self, propName, {writable: false, configurable: false});
	
})``;
